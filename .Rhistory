aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
ggplot(data, aes(x, y)) +
geom_point() +
geom_abline() +
coord_fixed() +
xlim(c(-4,4)) +
ylim(c(-4,4))
}
plot_normqq(model)
r <- range(c(data$x, data$y))
plot_normqq <- function(model){
aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
r <- range(c(data$x, data$y))
ggplot(data, aes(x, y)) +
geom_point() +
geom_abline() +
coord_fixed() +
xlim(r) +
ylim(r)
}
plot_normqq(model)
r <- range(c(data$x, data$y))
aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
r <- range(c(data$x, data$y))
ggplot(data, aes(y) +
geom_boxplot()
}
ggplot(data, aes(y)) +
geom_boxplot()
ggplot(data$y) +
geom_boxplot()
ggplot(data, aes(x, y)) +
geom_boxplot()
ggplot(data, aes(x, y)) +
geom_boxplot() +
ylim(r)
ggplot(data, aes(x, y)) +
geom_boxplot() +
ylim(c(-2, -4))
ggplot(data, aes(x, y)) +
geom_boxplot() +
ylim(c(-4, -2))
ggplot(data, aes(x, y)) +
geom_boxplot() +
ylim(c(-4, -2))
ggplot(data, aes(x, y))+
geom_boxplot()+
coord_cartesian(ylim=c(-4,-2))
plot_normqq <- function(model){
aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
r <- range(c(data$x, data$y))
ggplot(data, aes(x, y)) +
geom_point() +
geom_abline() +
coord_fixed() +
xlim(r) +
ylim(r) +
geom_linerange(aes(ymin=x, ymax=y))
}
plot_normqq(model)
plot_normqq <- function(model){
aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
r <- range(c(data$x, data$y))
ggplot(data, aes(x, y)) +
geom_point() +
geom_abline() +
coord_fixed() +
xlim(r) +
ylim(r) +
geom_linerange(aes(ymin=x, ymax=y, colour="red")) +
ggtitle("Norm QQ")+
theme(axis.title = element_text(size=20))
}
plot_normqq(model)
plot_normqq <- function(model){
aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
r <- range(c(data$x, data$y))
ggplot(data, aes(x, y)) +
geom_point() +
geom_abline() +
coord_fixed() +
xlim(r) +
ylim(r) +
geom_linerange(aes(ymin=x, ymax=y, colour="red")) +
ggtitle("Norm QQ")+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
}
plot_normqq(model)
devtools::install_github("metrumresearchgroup/ggedit",subdir="ggedit")
library(ggedit)
plot_normqq <- function(model){
aug <- augment(model)
n <- nrow(aug)
siatka <- seq(from=0, to=1, length.out=n+2)[2:(n+1)]
kwantyle <- qnorm(siatka)
data <- data.frame(y=sort(aug$.std.resid), x=kwantyle)
r <- range(c(data$x, data$y))
ggplot(data, aes(x, y)) +
geom_point() +
geom_abline() +
coord_fixed() +
xlim(r) +
ylim(r) +
geom_linerange(aes(ymin=x, ymax=y), colour="red") +
ggtitle("Norm QQ")+
theme(axis.title = element_text(size=20),
axis.text = element_text(size=15))
}
wykres <- plot_normqq(model)
ggedit(wykres)
edytowalny <- ggedit(wykres)
edytowalny <- ggedit(wykres)
edytowalny <- ggedit(wykres)
edytowalny$UpdatedThemes
wykres + edytowalny$UpdatedThemes
getwd()
setwd("/home/lapkot/Fizyka/miony")
tor <- function(momentum){
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(-4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
}
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(-4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + ((r1+r2)cos.kat.miedzy.promieniami1, -(r1+r2)sin.kat.miedzy.promieniami1)
momentum = 5
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(-4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + ((r1+r2)cos.kat.miedzy.promieniami1, -(r1+r2)sin.kat.miedzy.promieniami1)
momentum = 10
momentum = 8
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + ((r1+r2)cos.kat.miedzy.promieniami1, -(r1+r2)sin.kat.miedzy.promieniami1)
momentum = 40
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + ((r1+r2)cos.kat.miedzy.promieniami1, -(r1+r2)sin.kat.miedzy.promieniami1)
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + ((r1+r2)*cos.kat.miedzy.promieniami1, -(r1+r2)*sin.kat.miedzy.promieniami1)
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*cos.kat.miedzy.promieniami1, -(r1+r2)*sin.kat.miedzy.promieniami1)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
tor <- function(momentum){
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom1, odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[i] = acos(cos.kata) - kat.srodek2
}
return(pomiary)
}
tor(20)
source('~/.active-rstudio-document', echo=TRUE)
tor <- function(momentum){
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom1, odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[i-2] = acos(cos.kata) - kat.srodek2
}
return(pomiary)
}
tor(20)
tor <- function(momentum){
odl.pom1 = 3
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom1, odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
kocham.cie = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[kocham.cie] = acos(cos.kata) - kat.srodek2
kocham.cie = kocham.cie + 1
}
return(pomiary)
}
tor(20)
tor(4)
tor(10)
tor(8)
tor <- function(momentum){
odl.pom1 = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom1, odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - odl.pom1^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) - kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(16)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) - kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(16)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) - kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(20)
tor(200)
tor(100)
tor(30)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[1]/srodek2[2])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) - kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(16)
tor(20)
tor(100)
tor(1000)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[1]/srodek2[2])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) + kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(1000)
tor(100)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) + kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(100)
tor(8)
tor(16)
tor(20)
tor(100000)
tor(1.75*4)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(koniec.pola.wiekszego, odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) + kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(1.75*4)
tor(20)
tor(12)
tor(100)
tor(200)
tor(300)
tor(500)
tor <- function(momentum){
koniec.pola.wiekszego = 3.5
odl.pom2 = 4
odl.pom3 = 5
odl.pom4 = 6
odl.pomiary = c(odl.pom2, odl.pom3, odl.pom4)
r1 = momentum/(4) #chcemy aby zostaly tu metry, wiec musi ped byc w dobrych jednostkach
r2 = 2*r1
srodek1 = c(0, r1)
cos.kat.miedzy.promieniami1 = ((2*r1^2 - koniec.pola.wiekszego^2)/(2*r1^2))
sin.kat.miedzy.promieniami1 = sqrt(1 - cos.kat.miedzy.promieniami1^2)
srodek2 = srodek1 + c((r1+r2)*sin.kat.miedzy.promieniami1, -(r1+r2)*cos.kat.miedzy.promieniami1)
odl.srodek2 = sqrt(srodek2[1]^2 + srodek2[2]^2)
kat.srodek2 = atan(srodek2[2]/srodek2[1])
pomiary = c()
idx = 1
for(i in odl.pomiary){
cos.kata = (i^2 + odl.srodek2^2 - r2^2)/(2*i*odl.srodek2)
pomiary[idx] = acos(cos.kata) + kat.srodek2
idx = idx + 1
}
return(pomiary)
}
tor(3)
tor(-3000)
tor('ala')
tor(0.9)
tor(inf)
tor(1/0)
tor(Inf)
tor(4*1.75)
tor(4*1.70)
tor(4*1.75)
tor(20)
tor(1000000)
